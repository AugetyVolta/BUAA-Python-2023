[{'username': '匿名用户', 'comment': '早上好', 'time': '2023-07-21 09:52:15', 'reply_to': '匿名用户'}, {'username': '匿名用户', 'comment': '好好好', 'time': '2023-07-21 02:20:52', 'reply_to': '匿名用户'}, {'username': '匿名用户', 'comment': '晚安', 'time': '2023-07-21 02:20:15', 'reply_to': '匿名用户'}, {'username': '匿名用户', 'comment': 'import os\nimport sys\nimport ast\nfrom PyQt5.QtCore import QDateTime, Qt\nfrom PyQt5.QtGui import QPixmap\nfrom PyQt5.QtWidgets import QApplication, QMainWindow, QVBoxLayout, QLabel, QTextEdit, QPushButton, QWidget, \\\n    QScrollArea, QHBoxLayout, QDesktopWidget\nfrom qfluentwidgets import TextEdit, CaptionLabel, StrongBodyLabel, PrimaryPushButton, PushButton, BodyLabel, ScrollArea\n\n\nclass DishDetailWindow(QMainWindow):\n    def __init__(self):\n        super().__init__()\n        if not os.path.exists("list") or os.path.getsize("list") == 0:\n            self.comments = []\n        else:\n            f = open("list", "r")\n            self.comments = ast.literal_eval(f.readline())  # 用于存储评论的列表\n        self.reply_to_user = None  # 用于存储被回复用户的信息\n\n        self.initUI()\n\n    def initUI(self):\n        self.setWindowTitle(\'菜品详情页面\')\n        self.setGeometry(100, 100, 500, 900)  # 修改窗口大小为 500x900\n        self.center()\n\n        # 菜品图片\n        dish_image_label = QLabel(self)\n        dish_image_label.setGeometry(0, 0, 500, 300)  # 设置图片位置和大小\n        pixmap = QPixmap("dish.jpg")  # 替换为你的菜品图片文件名\n        dish_image_label.setPixmap(pixmap)\n        dish_image_label.setScaledContents(True)  # 缩放图片以适应标签大小\n\n        # 食堂和窗口信息\n        canteen_label = CaptionLabel(\'食堂：A 食堂\')\n        window_label = CaptionLabel(\'窗口：窗口 1\')\n        canteen_label.setAlignment(Qt.AlignCenter)\n        window_label.setAlignment(Qt.AlignCenter)\n\n        # 菜品详情显示区域\n        self.dish_detail_label = QLabel(\'菜品名称：鱼香肉丝\\n菜品简介：这是一道经典的川菜，口味鲜美，适合大众口味。\')\n        self.dish_detail_label.setStyleSheet("font-size: 24px;")\n\n        # 创建QScrollArea用于显示评论\n        self.scroll_area = ScrollArea()\n        self.scroll_area.setWidgetResizable(True)  # 设置滚动区域的小部件可以调整大小\n\n        # 创建一个QWidget用于放置评论项\n        self.comments_widget = QWidget()\n        self.comments_layout = QVBoxLayout()\n        self.comments_widget.setLayout(self.comments_layout)\n\n        # 将QWidget设置为滚动区域的小部件\n        self.scroll_area.setWidget(self.comments_widget)\n\n        # 评论区域\n        self.comment_label = BodyLabel(\'评论：\')\n        self.comment_label.setStyleSheet("font-size: 24px;")\n        self.comment_edit = TextEdit()\n        self.comment_edit.setPlaceholderText(\'在这里输入您的评论...\')\n        self.comment_edit.setStyleSheet("font-size: 20px;")\n        self.submit_button = PushButton(\'提交评论\')\n        self.submit_button.setStyleSheet("font-size: 20px;")\n        self.clear_button = PushButton(\'清空评论\')\n        self.clear_button.setStyleSheet("font-size: 20px;")\n\n        # 安排布局\n        layout = QVBoxLayout()\n        layout_for_button = QHBoxLayout()\n        layout.addWidget(dish_image_label)  # 添加菜品图片\n        layout.addWidget(canteen_label)  # 添加食堂信息\n        layout.addWidget(window_label)  # 添加窗口信息\n        layout.addWidget(self.dish_detail_label)\n        layout.addWidget(self.comment_label)\n        layout.addWidget(self.comment_edit)\n        layout_for_button.addWidget(self.submit_button)\n        layout_for_button.addWidget(self.clear_button)\n        layout.addLayout(layout_for_button)\n        layout.addWidget(self.scroll_area)  # 将QScrollArea添加到布局中\n\n        central_widget = QWidget()\n        central_widget.setLayout(layout)\n        self.setCentralWidget(central_widget)\n        # 连接按钮的点击事件\n        self.submit_button.clicked.connect(self.on_submit)\n        self.clear_button.clicked.connect(self.on_clear)\n\n        # 显示暂无评论的提示\n        self.no_comment_label = QLabel(\'暂无评论\')\n        self.no_comment_label.setStyleSheet("font-size: 24px; color: gray; margin: 10px;")\n\n        # 初始时没有评论，添加暂无评论的提示\n        self.comments_layout.addWidget(self.no_comment_label)\n\n        # 如果原来有评论就更新评论\n        self.update_comments()', 'time': '2023-07-21 01:59:14', 'reply_to': '匿名用户'}, {'username': '匿名用户', 'comment': 'height()', 'time': '2023-07-21 01:59:10', 'reply_to': None}, {'username': '匿名用户', 'comment': 'height()', 'time': '2023-07-21 01:59:06', 'reply_to': None}, {'username': '匿名用户', 'comment': '', 'time': '2023-07-21 01:59:00', 'reply_to': None}, {'username': '匿名用户', 'comment': '', 'time': '2023-07-21 01:58:59', 'reply_to': None}, {'username': '匿名用户', 'comment': '', 'time': '2023-07-21 01:58:58', 'reply_to': None}, {'username': '匿名用户', 'comment': '', 'time': '2023-07-21 01:58:56', 'reply_to': None}, {'username': '匿名用户', 'comment': '睡了', 'time': '2023-07-21 01:47:09', 'reply_to': '匿名用户'}, {'username': '匿名用户', 'comment': '', 'time': '2023-07-21 01:47:05', 'reply_to': None}, {'username': '匿名用户', 'comment': '', 'time': '2023-07-21 01:47:04', 'reply_to': None}, {'username': '匿名用户', 'comment': '你也好', 'time': '2023-07-21 01:43:22', 'reply_to': '匿名用户'}, {'username': '匿名用户', 'comment': '你好', 'time': '2023-07-21 01:43:18', 'reply_to': None}]